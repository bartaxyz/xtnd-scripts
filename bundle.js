!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t,e){var n={utf8:{stringToBytes:function(t){return n.bin.stringToBytes(unescape(encodeURIComponent(t)))},bytesToString:function(t){return decodeURIComponent(escape(n.bin.bytesToString(t)))}},bin:{stringToBytes:function(t){for(var e=[],n=0;n<t.length;n++)e.push(255&t.charCodeAt(n));return e},bytesToString:function(t){for(var e=[],n=0;n<t.length;n++)e.push(String.fromCharCode(t[n]));return e.join("")}}};t.exports=n},function(t,e,n){var r,o,i,a,s;r=n(11),o=n(0).utf8,i=n(12),a=n(0).bin,(s=function(t,e){t.constructor==String?t=e&&"binary"===e.encoding?a.stringToBytes(t):o.stringToBytes(t):i(t)?t=Array.prototype.slice.call(t,0):Array.isArray(t)||t.constructor===Uint8Array||(t=t.toString());for(var n=r.bytesToWords(t),c=8*t.length,l=1732584193,u=-271733879,d=-1732584194,m=271733878,f=0;f<n.length;f++)n[f]=16711935&(n[f]<<8|n[f]>>>24)|4278255360&(n[f]<<24|n[f]>>>8);n[c>>>5]|=128<<c%32,n[14+(c+64>>>9<<4)]=c;var h=s._ff,p=s._gg,v=s._hh,y=s._ii;for(f=0;f<n.length;f+=16){var g=l,E=u,C=d,x=m;l=h(l,u,d,m,n[f+0],7,-680876936),m=h(m,l,u,d,n[f+1],12,-389564586),d=h(d,m,l,u,n[f+2],17,606105819),u=h(u,d,m,l,n[f+3],22,-1044525330),l=h(l,u,d,m,n[f+4],7,-176418897),m=h(m,l,u,d,n[f+5],12,1200080426),d=h(d,m,l,u,n[f+6],17,-1473231341),u=h(u,d,m,l,n[f+7],22,-45705983),l=h(l,u,d,m,n[f+8],7,1770035416),m=h(m,l,u,d,n[f+9],12,-1958414417),d=h(d,m,l,u,n[f+10],17,-42063),u=h(u,d,m,l,n[f+11],22,-1990404162),l=h(l,u,d,m,n[f+12],7,1804603682),m=h(m,l,u,d,n[f+13],12,-40341101),d=h(d,m,l,u,n[f+14],17,-1502002290),l=p(l,u=h(u,d,m,l,n[f+15],22,1236535329),d,m,n[f+1],5,-165796510),m=p(m,l,u,d,n[f+6],9,-1069501632),d=p(d,m,l,u,n[f+11],14,643717713),u=p(u,d,m,l,n[f+0],20,-373897302),l=p(l,u,d,m,n[f+5],5,-701558691),m=p(m,l,u,d,n[f+10],9,38016083),d=p(d,m,l,u,n[f+15],14,-660478335),u=p(u,d,m,l,n[f+4],20,-405537848),l=p(l,u,d,m,n[f+9],5,568446438),m=p(m,l,u,d,n[f+14],9,-1019803690),d=p(d,m,l,u,n[f+3],14,-187363961),u=p(u,d,m,l,n[f+8],20,1163531501),l=p(l,u,d,m,n[f+13],5,-1444681467),m=p(m,l,u,d,n[f+2],9,-51403784),d=p(d,m,l,u,n[f+7],14,1735328473),l=v(l,u=p(u,d,m,l,n[f+12],20,-1926607734),d,m,n[f+5],4,-378558),m=v(m,l,u,d,n[f+8],11,-2022574463),d=v(d,m,l,u,n[f+11],16,1839030562),u=v(u,d,m,l,n[f+14],23,-35309556),l=v(l,u,d,m,n[f+1],4,-1530992060),m=v(m,l,u,d,n[f+4],11,1272893353),d=v(d,m,l,u,n[f+7],16,-155497632),u=v(u,d,m,l,n[f+10],23,-1094730640),l=v(l,u,d,m,n[f+13],4,681279174),m=v(m,l,u,d,n[f+0],11,-358537222),d=v(d,m,l,u,n[f+3],16,-722521979),u=v(u,d,m,l,n[f+6],23,76029189),l=v(l,u,d,m,n[f+9],4,-640364487),m=v(m,l,u,d,n[f+12],11,-421815835),d=v(d,m,l,u,n[f+15],16,530742520),l=y(l,u=v(u,d,m,l,n[f+2],23,-995338651),d,m,n[f+0],6,-198630844),m=y(m,l,u,d,n[f+7],10,1126891415),d=y(d,m,l,u,n[f+14],15,-1416354905),u=y(u,d,m,l,n[f+5],21,-57434055),l=y(l,u,d,m,n[f+12],6,1700485571),m=y(m,l,u,d,n[f+3],10,-1894986606),d=y(d,m,l,u,n[f+10],15,-1051523),u=y(u,d,m,l,n[f+1],21,-2054922799),l=y(l,u,d,m,n[f+8],6,1873313359),m=y(m,l,u,d,n[f+15],10,-30611744),d=y(d,m,l,u,n[f+6],15,-1560198380),u=y(u,d,m,l,n[f+13],21,1309151649),l=y(l,u,d,m,n[f+4],6,-145523070),m=y(m,l,u,d,n[f+11],10,-1120210379),d=y(d,m,l,u,n[f+2],15,718787259),u=y(u,d,m,l,n[f+9],21,-343485551),l=l+g>>>0,u=u+E>>>0,d=d+C>>>0,m=m+x>>>0}return r.endian([l,u,d,m])})._ff=function(t,e,n,r,o,i,a){var s=t+(e&n|~e&r)+(o>>>0)+a;return(s<<i|s>>>32-i)+e},s._gg=function(t,e,n,r,o,i,a){var s=t+(e&r|n&~r)+(o>>>0)+a;return(s<<i|s>>>32-i)+e},s._hh=function(t,e,n,r,o,i,a){var s=t+(e^n^r)+(o>>>0)+a;return(s<<i|s>>>32-i)+e},s._ii=function(t,e,n,r,o,i,a){var s=t+(n^(e|~r))+(o>>>0)+a;return(s<<i|s>>>32-i)+e},s._blocksize=16,s._digestsize=16,t.exports=function(t,e){if(null==t)throw new Error("Illegal argument "+t);var n=r.wordsToBytes(s(t,e));return e&&e.asBytes?n:e&&e.asString?a.bytesToString(n):r.bytesToHex(n)}},function(t,e,n){"use strict";n.r(e);n(3),n(4),n(5),n(6),n(7),n(8),n(9),n(10)},function(t,e){var n;n=function(){function t(t){var e=this;this.timer=0,this.timerRefreshRate=60,this.timerDuration=5e3,this.section=t,this.carouselContent=this.section.getElementsByClassName("carousel-content")[0],this.controlsIndex=this.section.getElementsByClassName("carousel-controls-index")[0],this.controlsHandles=this.section.getElementsByClassName("carousel-controls-handle"),this.controlsHandleTimers=this.section.getElementsByClassName("carousel-controls-handle-timer"),this.carouselContent.addEventListener("click",(function(){e.increaseIndex()})),this.initElementStates(),this.initEventListeners(),this.setIndex(0),this.timerTick()}return t.prototype.timerTick=function(){var t=this;this.timer+=1e3/this.timerRefreshRate,this.timer>this.timerDuration&&(this.timer=0,this.increaseIndex()),this.updateActiveControlHandle(),setTimeout((function(){t.timerTick()}),1e3/this.timerRefreshRate)},t.prototype.initElementStates=function(){[].forEach.call(this.controlsHandleTimers,(function(t){return t.style.width="0%"}))},t.prototype.initEventListeners=function(){var t=this;[].forEach.call(this.controlsHandles,(function(e,n){e.addEventListener("click",(function(){t.setIndex(n)}))}))},t.prototype.increaseIndex=function(){void 0!==this.currentIndex&&(this.currentIndex===this.controlsHandleTimers.length-1?this.setIndex(0):this.setIndex(this.currentIndex+1))},t.prototype.setIndex=function(t){this.timer=0,this.updateControlsHandles(this.currentIndex,t),this.currentIndex=t,this.setControlsIndex(this.currentIndex),this.updateCarouselContent()},t.prototype.setControlsIndex=function(t){this.controlsIndex&&(this.controlsIndex.textContent="0"+(t+1))},t.prototype.updateActiveControlHandle=function(){void 0!==this.currentIndex&&(this.controlsHandleTimers[this.currentIndex].style.width=100/this.timerDuration*this.timer+"%")},t.prototype.updateControlsHandles=function(t,e){void 0!==t&&(this.controlsHandleTimers[t].style.width="0%"),void 0!==e&&(this.controlsHandleTimers[e].style.width="100%")},t.prototype.updateCarouselContent=function(){this.carouselContent&&(this.carouselContent.style.marginLeft="-"+this.currentIndex+"00%")},t}(),window.Carousel=n,addEventListener("DOMContentLoaded",(function(){var t=document.getElementById("carousel-section");t&&new n(t);for(var e=document.querySelectorAll('[data-component="carousel"]'),r=0;r<e.length;++r)new n(e[r]);var o=document.querySelectorAll("[data-icon=arrow-right-white]");[].forEach.call(o,(function(t){t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="20" height="16" viewBox="0 0 20 16"><path fill="currentColor" fill-rule="nonzero" d="M1.083 9.51l12.86-.006-4.052 4.061a1.054 1.054 0 0 0-.308.749c0 .282.11.549.308.747l.63.631c.198.198.463.308.744.308.282 0 .547-.109.745-.307l6.946-6.946c.2-.199.308-.464.307-.746.001-.284-.108-.549-.307-.748L12.01.307A1.046 1.046 0 0 0 11.265 0c-.281 0-.546.11-.744.307l-.63.631a1.043 1.043 0 0 0-.308.744c0 .282.11.532.308.73l4.098 4.084H1.069c-.581 0-1.069.5-1.069 1.08v.893c0 .58.502 1.042 1.083 1.042z" /></svg>'}))}))},function(t,e){var n;n=function(){function t(t){this.cartButton=t,this.initCartButtonWatcher()}return t.prototype.initCartButtonWatcher=function(){var t=this,e=0;setInterval((function(){if(t.cartButton.textContent){var n=parseInt(t.cartButton.textContent,10);e!==n&&(0===(e=n)?t.cartButton.classList.add("empty"):t.cartButton.classList.remove("empty"))}}),100)},t}(),addEventListener("DOMContentLoaded",(function(){for(var t=document.querySelectorAll('[data-component="cart-button"]'),e=0;e<t.length;++e)new n(t[e])}))},function(t,e){var n;n=function(t){var e=this;this.emailForm=t,this.emailInput=t.querySelector('[data-component="email-input"]'),this.errorMessage=t.querySelector('[data-component="email-error-message"]');var n=!1;this.emailInput.addEventListener("invalid",(function(t){t.preventDefault(),n?n=!1:(console.log("invalid"),n=!0,e.emailInput.checkValidity()||(e.errorMessage.innerText=e.emailInput.validationMessage))})),t.addEventListener("submit",(function(){e.errorMessage.innerText=""}))},addEventListener("DOMContentLoaded",(function(){for(var t=document.querySelectorAll('[data-component="email-form"]'),e=0;e<t.length;++e)new n(t[e])}))},function(t,e){var n=function(){function t(t){var e=this;this.mouseMoveHistory=[],this.emailModal=t,this.emailModal.style=this.emailModal.style.cssText+"backdrop-filter: blur(40px);",this.emailModalCloseButton=Array.from(document.querySelectorAll('[data-component="email-modal-close-button"]')),this.emailModalCloseButton.forEach((function(t){t.addEventListener("click",(function(){e.closeModal()}))})),setTimeout((function(){e.openModal()}),45e3),setTimeout((function(){document.addEventListener("mousemove",(function(t){e.mouseMoveHistory.push(t.clientY);var n=e.mouseMoveHistory.length;e.mouseMoveHistory[n-1]<15&&e.mouseMoveHistory[n-2]>e.mouseMoveHistory[n-1]&&e.openModal()}))}),5e3)}return t.prototype.openModal=function(){"true"!==sessionStorage.getItem("EmailModalOpened")&&(sessionStorage.setItem("EmailModalOpened","true"),this.emailModal.classList.add("open"))},t.prototype.closeModal=function(){this.emailModal.classList.remove("open")},t}();addEventListener("DOMContentLoaded",(function(){for(var t=document.querySelectorAll('[data-component="email-modal"]'),e=0;e<t.length;++e)new n(t[e])}))},function(t,e){var n;n=function(){function t(t){this.navigation=t,this.initNavigation()}return t.prototype.initNavigation=function(){var t=this,e=function(){0===scrollY?t.navigation.classList.add("transparent"):t.navigation.classList.remove("transparent")};window.addEventListener("scroll",e),window.addEventListener("DOMContentLoaded",e)},t}(),addEventListener("DOMContentLoaded",(function(){for(var t=document.querySelectorAll('[data-component="navigation"]'),e=0;e<t.length;++e)new n(t[e])}))},function(t,e){var n;n=function(t){this.scrollTopButton=t,this.scrollTopButton.addEventListener("click",(function(){scrollTo(0,0)}))},addEventListener("DOMContentLoaded",(function(){for(var t=document.querySelectorAll('[data-component="scroll-top"]'),e=0;e<t.length;++e)new n(t[e])}))},function(t,e){var n;n=function(){function t(t){var e=this;this.timer=0,this.timerRefreshRate=60,this.timerDuration=5e3,this.section=t,this.carouselContent=this.section.getElementsByClassName("showcase-carousel-content")[0],this.carouselSlides=this.carouselContent.getElementsByClassName("showcase-carousel-content-slide"),this.controlsHandles=this.section.getElementsByClassName("showcase-carousel-controls-handle"),this.controlsHandleTimers=this.section.getElementsByClassName("showcase-carousel-controls-handle-timer"),this.carouselContent.addEventListener("click",(function(){e.increaseIndex()})),this.initElementStates(),this.initEventListeners(),this.setIndex(0),this.timerTick()}return t.prototype.timerTick=function(){var t=this;this.timer+=1e3/this.timerRefreshRate,this.timer>this.timerDuration&&(this.timer=0,this.increaseIndex()),this.updateActiveControlHandle(),setTimeout((function(){t.timerTick()}),1e3/this.timerRefreshRate)},t.prototype.initElementStates=function(){[].forEach.call(this.controlsHandleTimers,(function(t){return t.style.flexGrow="0"})),[].forEach.call(this.carouselSlides,(function(t,e){t.style.opacity=0===e?"1":"0"}))},t.prototype.initEventListeners=function(){var t=this;[].forEach.call(this.controlsHandles,(function(e,n){e.addEventListener("click",(function(){t.setIndex(n)}))}))},t.prototype.increaseIndex=function(){void 0!==this.currentIndex&&(this.currentIndex===this.controlsHandleTimers.length-1?this.setIndex(0):this.setIndex(this.currentIndex+1))},t.prototype.setIndex=function(t){this.timer=0,this.currentIndex=t,this.updateControlsHandles(),this.updateCarouselContent()},t.prototype.updateActiveControlHandle=function(){void 0!==this.currentIndex&&(this.controlsHandleTimers[this.currentIndex].style.flexGrow=""+1/this.timerDuration*this.timer)},t.prototype.updateControlsHandles=function(){var t=this;[].forEach.call(this.controlsHandles,(function(e,n){n===t.currentIndex?(e.style.opacity="1",e.style.height="64px"):(e.style.opacity="0.4",e.style.height="48px")})),[].forEach.call(this.controlsHandleTimers,(function(t){return t.style.flexGrow="0"}))},t.prototype.updateCarouselContent=function(){var t=this;[].forEach.call(this.carouselSlides,(function(e,n){n===t.currentIndex?e.style.opacity="1":e.style.opacity="0"}))},t}(),window.ShowcaseCarousel=n,addEventListener("DOMContentLoaded",(function(){for(var t=document.querySelectorAll('[data-component="showcase-carousel"]'),e=0;e<t.length;++e)new n(t[e])}))},function(module,__webpack_exports__,__webpack_require__){"use strict";var md5__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),md5__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(md5__WEBPACK_IMPORTED_MODULE_0__),initReferralCandy=function(){var appId="nu1a0ru6vpnu7f3fr8ghiyt43",accountSecret="591621b6b1063c43604e71bdf8f00a96",timestamp=Math.floor(Date.now()/1e3),orderNameElement=null,orderEmailElement=null,orderAmountElement=null,orderName="",orderEmail="",orderAmount="",generateSignature=function(t,e,n){return md5__WEBPACK_IMPORTED_MODULE_0__([t,e,n,timestamp,accountSecret].join(","))},initReferralCandyCode=function(){var _a=orderNameElement.textContent.split(" "),firstName=_a[0],lastName=_a[1],email=orderEmailElement.textContent.trim(),amount=getAmountFromCurrencyString(orderAmountElement.textContent),generatedCode='\n      <div\n        id="refcandy-mint"\n        data-app-id='+appId+'\n        data-fname="'+firstName+'"\n        data-lname="'+lastName+'"\n        data-email="'+email+'"\n        data-amount="'+amount+'"\n        data-currency="USD"\n        data-timestamp="'+timestamp+'"\n        data-external-reference-id="93211001"\n        data-signature="'+generateSignature(email,firstName,amount)+'"\n      ></div>\n    ',generatedScript='(function(e){var t,n,r,i,s,o,u,a,f,l,c,h,p,d,v;z="script";l="refcandy-purchase-js";c="refcandy-mint";p="go.referralcandy.com/purchase/";t="data-app-id";r={email:"a",fname:"b",lname:"c",amount:"d",currency:"e","accepts-marketing":"f",timestamp:"g","referral-code":"h",locale:"i","external-reference-id":"k",signature:"ab"};i=e.getElementsByTagName(z)[0];s=function(e,t){if(t){return""+e+"="+encodeURIComponent(t)}else{return""}};d=function(e){return""+p+h.getAttribute(t)+".js?aa=75&"};if(!e.getElementById(l)){h=e.getElementById(c);if(h){o=e.createElement(z);o.id=l;a=function(){var e;e=[];for(n in r){u=r[n];v=h.getAttribute("data-"+n);e.push(s(u,v))}return e}();o.src="//"+d(h.getAttribute(t))+a.join("&");return i.parentNode.insertBefore(o,i)}}})(document);';console.log("Referral Candy:",generatedCode,generatedScript);var wrapperDiv=document.createElement("div");wrapperDiv.innerHTML=generatedCode,document.body.appendChild(wrapperDiv),setTimeout((function(){eval(generatedScript)}),200)},getAmountFromCurrencyString=function(t){return t.replace(/[^0-9.-]+/g,"")},checkOrderElementsReady=function(){return orderNameElement=document.getElementById("order-name"),orderEmailElement=document.getElementById("order-email"),orderAmountElement=document.getElementById("order-amount"),!!(orderNameElement&&orderEmailElement&&orderAmountElement)&&(orderName=orderNameElement.textContent.trim(),orderEmail=orderEmailElement.textContent.trim(),orderAmount=orderAmountElement.textContent.trim(),console.log([["full name",orderName].join(": "),["email",orderEmail].join(": "),["amount",orderAmount].join(": ")].join("\n")),!!(orderName&&orderEmail&&orderAmount))},interval=setInterval((function(){checkOrderElementsReady()&&(clearInterval(interval),initReferralCandyCode())}),500)};"/order-confirmation"===location.pathname&&initReferralCandy()},function(t,e){var n,r;n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r={rotl:function(t,e){return t<<e|t>>>32-e},rotr:function(t,e){return t<<32-e|t>>>e},endian:function(t){if(t.constructor==Number)return 16711935&r.rotl(t,8)|4278255360&r.rotl(t,24);for(var e=0;e<t.length;e++)t[e]=r.endian(t[e]);return t},randomBytes:function(t){for(var e=[];t>0;t--)e.push(Math.floor(256*Math.random()));return e},bytesToWords:function(t){for(var e=[],n=0,r=0;n<t.length;n++,r+=8)e[r>>>5]|=t[n]<<24-r%32;return e},wordsToBytes:function(t){for(var e=[],n=0;n<32*t.length;n+=8)e.push(t[n>>>5]>>>24-n%32&255);return e},bytesToHex:function(t){for(var e=[],n=0;n<t.length;n++)e.push((t[n]>>>4).toString(16)),e.push((15&t[n]).toString(16));return e.join("")},hexToBytes:function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(parseInt(t.substr(n,2),16));return e},bytesToBase64:function(t){for(var e=[],r=0;r<t.length;r+=3)for(var o=t[r]<<16|t[r+1]<<8|t[r+2],i=0;i<4;i++)8*r+6*i<=8*t.length?e.push(n.charAt(o>>>6*(3-i)&63)):e.push("=");return e.join("")},base64ToBytes:function(t){t=t.replace(/[^A-Z0-9+\/]/gi,"");for(var e=[],r=0,o=0;r<t.length;o=++r%4)0!=o&&e.push((n.indexOf(t.charAt(r-1))&Math.pow(2,-2*o+8)-1)<<2*o|n.indexOf(t.charAt(r))>>>6-2*o);return e}},t.exports=r},function(t,e){function n(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
t.exports=function(t){return null!=t&&(n(t)||function(t){return"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&n(t.slice(0,0))}(t)||!!t._isBuffer)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,